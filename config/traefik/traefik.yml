## traefik.yml
#
## Docker configuration backend
providers:
  docker:
    exposedByDefault: false
    constraints: "Label(`cluster.name`, `purr.services`)"
  file:
    directory: /etc/traefik
    watch: true

# API and dashboard configuration
api:
  dashboard: true

entrypoints:
  http:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https
  https:
    address: ":443"

certificatesResolvers:
  le:
    acme:
      email: admins@moomers.org
      storage: /acme/acme.json
      httpChallenge:
        entrypoint: http
      tlsChallenge: {}

  # for zones behind cloudflare proxied DNS, we use the cloudflare dns provider
  # see:
  #   https://www.techaddressed.com/tutorials/certbot-cloudflare-reverse-proxy/
  # this relies on credentials in a file on purr. see the `env_file` directive in
  # docker-compose for traefik
  cf:
    acme:
      email: admins@moomers.org
      storage: /acme/acme-cf.json
      dnsChallenge:
        provider: "cloudflare"
    
# http config
http:
  middlewares:
    # this is based on:
    # https://github.com/brokenscripts/authentik_traefik
    authentik:
      forwardAuth:
        address: "http://authentik_server:9000/outpost.goauthentik.io/auth/traefik"
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version

    moodmins_auth: # the name of the auth middleware
      basicAuth:
        realm: "Moodmins service login"
        users: # example: `htpasswd -nB igor`
          - igor:$2y$05$j4IketELcP4gX1YNa2JWbe//YnMkinDkVTxxO7uyOO4F/2ow5SnaC
