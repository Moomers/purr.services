"""
Django Settings for Mailman Suite (hyperkitty + postorius)

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# this file modifies the default settings from here:
# https://github.com/maxking/docker-mailman/blob/main/web/mailman-web/settings.py

SECRET_KEY = '$DCSM{MAILMAN_WEB_SECRET_KEY}'
ADMINS = (
     ('Mailman Suite Admin', 'igor47@moomers.org'),
)

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/3.1/ref/settings/#allowed-hosts
# set to '*' since we're behind a reverse proxy anyway
ALLOWED_HOSTS = [
    '*'
]

# Mailman API credentials
MAILMAN_REST_API_URL = 'http://mailman.core:8001'
MAILMAN_REST_API_USER = 'restadmin'
MAILMAN_REST_API_PASS = '$DCSM{MAILMAN_REST_API_PASS}'
MAILMAN_ARCHIVER_KEY = '$DCSM{MAILMAN_ARCHIVER_KEY}'  # AKA HYPERKITTY_API_KEY
MAILMAN_ARCHIVER_FROM = ('*')

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
# we use usqlite; the config is copied from debian
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': '/opt/mailman-web-data/mailman3web.db',
        # The following settings are not used with sqlite3:
        'USER': '',
        'PASSWORD': '',
        # HOST: empty for localhost through domain sockets or '127.0.0.1' for
        # localhost through TCP.
        'HOST': '',
        # PORT: set to empty string for default.
        'PORT': '',
        # OPTIONS: Extra parameters to use when connecting to the database.
        'OPTIONS': {
            # Set sql_mode to 'STRICT_TRANS_TABLES' for MySQL. See
            # https://docs.djangoproject.com/en/1.11/ref/
            #     databases/#setting-sql-mode
            #'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# always in utc time!
TIME_ZONE = 'UTC'

# Use SERVE_FROM_DOMAIN as the default domain in the email.
DEFAULT_FROM_EMAIL = 'postorius@moomers.org'
SERVER_EMAIL = 'mailman@moomers.org'

# Change this when you have a real email backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = '172.20.1.1'
#EMAIL_PORT = os.environ.get('SMTP_PORT', 25)
#EMAIL_HOST_USER = os.environ.get('SMTP_HOST_USER', '')
#EMAIL_HOST_PASSWORD = os.environ.get('SMTP_HOST_PASSWORD', '')
#EMAIL_USE_TLS = os.environ.get('SMTP_USE_TLS', False)
#EMAIL_USE_SSL = os.environ.get('SMTP_USE_SSL', False)

#
# WILL MESS WITH THIS FOR SSO
#
# this gets merged into INSTALLED_APPS
MAILMAN_WEB_SOCIAL_AUTH = [
    'allauth.socialaccount.providers.openid_connect',
]


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Django Allauth
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"
ACCOUNT_UNIQUE_EMAIL  = True

SOCIALACCOUNT_PROVIDERS = {
    'openid_connect': {
        "APPS": [
            {
                "provider_id": "moomers",
                "name": "Moomers Auth",
                "client_id": "$DCSM{MAILMAN_OAUTH_CLIENT_ID}",
                "secret": "$DCSM{MAILMAN_OAUTH_CLIENT_SECRET}",
                "settings": {
                    "server_url": "https://auth.moomers.org/application/o/mailman/.well-known/openid-configuration",
                }
            }
        ],
        #"SERVERS": [
        #    {
        #        "id": "moomers",
        #        "name": "Moomers Auth",
        #        "server_url": "https://auth.moomers.org/application/o/mailman/.well-known/openid-configuration",
        #        "token_auth_method": "client_secret_basic",
        #        "APP": {
        #            "client_id": "$DCSM{MAILMAN_OAUTH_CLIENT_ID}",
        #            "secret": "DCSM{MAILMAN_OAUTH_CLIENT_SECRET}",
        #        }
        #    }
        #]
    },
}

# xapian for full text search
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'xapian_backend.XapianEngine',
        'PATH': "/opt/mailman-web-data/fulltext_index",
    },
}

# we do compress offline as part of the entrypoint script
COMPRESS_OFFLINE = True

# use our static ip from docker-compose
POSTORIUS_TEMPLATE_BASE_URL = 'http://172.20.1.130:8000'

# vim:ft=python
