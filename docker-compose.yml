version: '3.9'

services:
  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    container_name: traefik.purr
    labels:
      - "traefik.enable=true"
      - "cluster.name=purr.services"
      - "traefik.http.routers.api.rule=Host(`traefik.moomers.org`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=moodmins_auth@file"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.routers.api.entrypoints=https"
    ports:
      - "173.236.34.125:80:80"
      - "173.236.34.125:443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ${REPO}/config/traefik:/etc/traefik
      - ${STORAGE}/traefik/acme:/acme
    env_file:
      - ${STORAGE}/traefik/cloudflare.env

  # mmrs.link link shortening service
  mmrs:
    image: ghcr.io/igor47/smrs:v0.1.1
    restart: unless-stopped
    container_name: mmrs.link
    labels:
      - "traefik.enable=true"
      - "cluster.name=purr.services"
      - "traefik.http.routers.mmrs.rule=Host(`mmrs.link`,`www.mmrs.link`)"
      - "traefik.http.routers.mmrs.tls=true"
      - "traefik.http.routers.mmrs.tls.certresolver=cf"
      - "traefik.http.routers.mmrs.entrypoints=https"
      - "traefik.http.services.mmrs.loadbalancer.server.port=8000"
    volumes:
      # create this directory, then `chown 82:82 mmrs/data` (that's the UID inside the container)
      - ${STORAGE}/mmrs/data:/smrs/data


  # Watchtower upgrades services automatically
  watchtower:
    restart: unless-stopped
    image: containrrr/watchtower
    container_name: watchtower.purr
    labels:
      - "traefik.enable=false"
      - "cluster.name=purr.services"
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 7200 # checks for updates every two hours
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
